  void connect(TreeLinkNode *root) 
    {
       if(root==NULL)
          return;
          
        root->next = NULL;
        
        TreeLinkNode *leftmostchild = root;
        
        TreeLinkNode *parent = root;
        
        while(leftmostchild) 
        {
            parent = leftmostchild;
            
            while(parent !=NULL && parent->left==NULL && parent->right==NULL)  // first non null parent node 
              parent = parent->next;
              
            if(parent==NULL) 
               return;
            
            leftmostchild = parent->left ? parent->left : parent->right;
            
            TreeLinkNode *cur = leftmostchild;
            
            while(parent) 
            {
                if(cur==parent->left) 
                {  
                    if(parent->right) 
                    {
                        cur->next = parent->right;
                        cur = cur->next;
                    }
                    parent = parent->next;
                }
                else 
                {
                    if(cur==parent->right) 
                    { 
                      parent = parent->next;
                    }
                    else 
                    {  // cur is the child of the previous parent node
                        while(parent&&!parent->left && !parent->right)   // find the first parent node that has children to connect
                        {
                          parent = parent->next;
                        } 
                        
                        if(parent==NULL)  // no more child node to connet
                         break;
                        else
                        {
                            cur->next = parent->left ? parent->left : parent->right;    
                            cur = cur->next;
                        }
                        
                    }
                } 
            
                
            }// end while parent
       
        }//end while leftmostchild
    
       return;   

    }
