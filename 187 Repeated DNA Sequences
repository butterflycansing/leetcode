 vector<string> findRepeatedDnaSequences(string s) 
    {
        vector<string> res;
        
        if(s.size()<10) return res;
        
        unordered_map<int,int> mymap;

        int sum = 0;
        
        for(int i=0;i<9;i++ )
        {
            int mask = ~(3 << 18);
            sum &= mask;
            sum <<= 2;
            
          char newc = s[i];
          if (newc == 'C')
            sum |= 1;
          else if (newc == 'G')
            sum |= 2;
         else if (newc == 'T')
            sum |= 3;
        
        }
        
        for(int i=9;i<s.size();i++ )
        {
            int mask = ~(3 << 18);
            sum &= mask;
            sum <<= 2;
         
          char newc = s[i];
          if (newc == 'C')
            sum |= 1;
        else if (newc == 'G')
            sum |= 2;
        else if (newc == 'T')
            sum |= 3;
         
           
              
            mymap[sum]++;
            
            if (mymap[sum] == 2)
                res.push_back(s.substr(i-9,10));
        }
        return res;
        
        //https://oj.leetcode.com/discuss/24478/i-did-it-in-10-lines-of-c
        /*
        unordered_map<int, int> m;
        vector<string> r;

        int i = 0;
        
        int t = 0;
    
       while (i < s.size())
       {
          t = (t << 3 | s[i] & 7) & 0x3FFFFFFF ;    // 0x3FFFFFFF = 0o7777777777
     
          m[t]++;
          
          if(m[t]==2)  // equals to 2 but not bigger than 2. to avoid repetitive strings.
            r.push_back(s.substr(i-9,10));
            
           i++;
       }
      
       return r;
        */
    }
